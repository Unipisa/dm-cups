#!/bin/bash
#
# Prototipo di backend CUPS con accounting integrato per il dipartimento di 
# matematica. Al momento funziona, conta le pagine, ma non fa nessun tipo 
# di check ulteriore. 

if [ "$CONFIG_FILE" = "" ]; then 
  CONFIG_FILE="/etc/cups/dm-cups.conf"
fi

if [ ! -r "$CONFIG_FILE" ]; then
  echo "ERROR: Missing configuration file /etc/dm-cups.conf" 1>&2
  exit 1
fi

# This file defines the PRINTERS and QUOTAPERIOD variables
. $CONFIG_FILE


if [ $# -eq 0 ]; then
  for printer in $PRINTERS; do
    prname=$(echo $printer | cut -d ':' -f1)
    echo "direct dm-cups://$prname \"$prname\" \"Accounting DM module for $prname\""
  done
  exit 0
fi

# Check iniziale: se il database non esiste viene creato
if [ ! -r $DATABASE_PATH ]; then
  echo "INFO: Creating the database in $DATABASE_PATH" 1>&2
  echo "CREATE TABLE documents (user VARCHAR(256), printer VARCHAR(64), pages INTEGER, timestamp INTEGER);" | sqlite3 $DATABASE_PATH
  if [ $? -ne 0 ]; then
    echo "ERROR: Failed to create the database in $DATABASE_PATH, exiting" 1>&2
    exit 1
  fi
fi

CUPS_BIN_DIR=$( cups-config --serverbin ) || CUPS_BIN_DIR="/usr/lib/cups"

PRINTING_USER=$2
FILENAME=$3
NCOPIES=$4

# Sanitize printing user, we only allow [a-z], dots, and digits in the name
SANITIZED_USER=${PRINTING_USER/[^A-Za-z0-9.]/}
if [ "$SANITIZED_USER" != "$PRINTING_USER" ]; then
  echo "ERROR: Invalid user specified: $PRINTING_USER" 1>&2
  exit 1
fi

# Even if a file is specified, read from stdin
if test -n "$6"
    then exec <"$6"
fi

# Save the file to count the number of pages
PSFILE=$(mktemp)
cat - > $PSFILE

# Perché qui devo togliere 2 pagine? Probabilmente è qualche mistero di
# Ghostscript che non riesco a comprendere.
GSOUT=$(echo xxx | ghostscript -sDEVICE=nullpage $PSFILE)
if [ $? -ne 0 ]; then
  echo "ERROR: Failed to run Ghostscript on the document, exiting" 1>&2
  exit 1
fi
NPAGES=$(echo "$GSOUT" | grep showpage | wc -l)
NPAGES=$(( ($NPAGES) * $NCOPIES ))

# Detect the necessary printer
for printerentry in $PRINTERS; do
  printer=$(echo $printerentry | cut -d ':' -f1)
  if [ "dm-account://$printer" = "$DEVICE_URI" ]; then
    SELECTEDPRINTER="$printer"
    QUOTA=$(echo $printerentry | cut -d ':' -f2)
    PRINTSERVER=$(echo $printerentry | cut -d ':' -f3)
  fi
done

if [ "$SELECTEDPRINTER" = "" ]; then  
  echo "ERROR: Could not find the printer corresponding to $DEVICE_URI"
  exit 1
fi

echo "INFO: Selected printer is $SELECTEDPRINTER, quota is $QUOTA" 1>&2

# Check: l'utente che vogliamo far stampare, ha già stampato un numero 
# di pagine sufficiente nell'ultimo periodo prefissato?
timestamp=$(date +%s)
PRINTEDPAGES=$(echo "select sum(pages) from documents where user=\"$PRINTING_USER\" and printer=\"$SELECTEDPRINTER\" and timestamp >= $((timestamp - $QUOTAPERIOD))" | sqlite3 /tmp/dm-cups.db)
if [ "$PRINTEDPAGES" = "" ]; then
  PRINTEDPAGES="0"
fi
echo "INFO: User $PRINTING_USER has printed $PRINTEDPAGES pages on $SELECTEDPRINTER"

NEWTOTAL=$(($PRINTEDPAGES + $NPAGES))
if [ $NEWTOTAL -gt $QUOTA ]; then
  # We cannot let the user print, he/she is out of quota
  echo "ERROR: User quota is exhausted" 1>&2
  exit 1
else
  # Update the quota
  echo "INSERT INTO documents VALUES (\"$PRINTING_USER\", \"$SELECTEDPRINTER\",$NPAGES, $timestamp);" | sqlite3 $DATABASE_PATH
fi

# FIXME: cdclf è raggiungibile solo su printserver.dm.unipi.it, probabilmente
# conviene inserire tutto l'URI sopra, e non solo la stampante.
echo "INFO: dm-account printing $NPAGES pages on $SELECTEDPRINTER" 1>&2
export DEVICE_URI="ipp://$PRINTSERVER/printers/$SELECTEDPRINTER"
$CUPS_BIN_DIR/backend/ipp "$1" "$2" "$3" "$4" "$5" < $PSFILE
rm -f $PSFILE

